; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = LUST-motion
data_dir = data
extra_configs = 
	factory_settings.ini
	features.ini
default_envs = OSSMRefBoard

[env]
framework = arduino
platform = espressif32
build_flags = 
	${factory_settings.build_flags}
	${features.build_flags}
    ; Increase queue size of SSE and WS
    -D SSE_MAX_QUEUED_MESSAGES=64
    -D WS_MAX_QUEUED_MESSAGES=64
	; Uncomment to receive log messages from the ESP Arduino Core
	-D CORE_DEBUG_LEVEL=4
    ; Move all networking stuff to the protocol core 0 and leave business logic on application core 1
    -D CONFIG_ASYNC_TCP_RUNNING_CORE=0
    -D ESP32SVELTEKIT_RUNNING_CORE=0
	-D NO_GLOBAL_ARDUINOOTA
    ; Uncomment PROGMEM_WWW to enable the storage of the WWW data in PROGMEM
    -D PROGMEM_WWW
    ; Uncomment to configure Cross-Origin Resource Sharing
    -D ENABLE_CORS
    -D CORS_ORIGIN=\"*\"
    ; Serve config files from flash
    -D SERVE_CONFIG_FILES
lib_compat_mode = strict

; Uncomment to include the a Root CA SSL Certificate Bundle for all SSL needs
; Needs -D FT_DOWNLOAD_FIRMWARE=1 and -D FT_NTP=1
board_build.embed_files = src/certs/x509_crt_bundle.bin
; Source for SSL Cert Store can bei either downloaded from Mozilla with 'mozilla' or complied from 'folder' full of *.pem / *.dem files
board_ssl_cert_source = folder

; Uncomment & modify the lines below in order to configure OTA updates
;upload_flags = 
;  --port=8266 
;  --auth=esp-sveltekit
;upload_port = 192.168.0.11  
;upload_protocol = espota

monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
	default
	colorize
board_build.filesystem = littlefs
extra_scripts = 
    pre:scripts/build_interface.py
    pre:scripts/generate_cert_bundle.py
lib_deps = 
	ArduinoJson@>=6.0.0,<7.0.0
	esphome/AsyncTCP-esphome @ =2.0.1
	ottowinter/AsyncMqttClient-esphome @ ^0.8.6
    makuna/NeoPixelBus @ ^2.7.6
    gin66/FastAccelStepper @ ^0.30.6
    miq19/eModbus@^1.7.0

[env:OSSMRefBoard]
board = esp32dev
board_build.mcu = esp32
; Uncomment min_spiffs.csv setting if using PROGMEM_WWW with ESP32
board_build.partitions = min_spiffs.csv
build_flags = 
    ${env.build_flags}
    -D BUILD_ENV=\"OSSMRefBoard\"

